name: Release
on:
  push:
    tags:
      - 'v[0-9]*'

env:
  IMAGE_NAME: ghcr.io/zombiezen/tailscale-lb

jobs:
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Log into GitHub Container Registry
        run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u zombiezen --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Nix
        uses: cachix/install-nix-action@v16
      - name: Set up cache
        uses: zombiezen/setup-nix-cache-action@v0.1.0
        with:
          substituters: s3://zombiezen-tailscale-lb-nixcache?endpoint=https://storage.googleapis.com
          secret_keys: ${{ secrets.NIX_PRIVATE_KEY }}
          aws_access_key_id: ${{ secrets.GCS_HMAC_ACCESS_ID }}
          aws_secret_access_key: ${{ secrets.GCS_HMAC_SECRET_ACCESS_KEY }}
      - name: Check out code
        uses: actions/checkout@v2
      - id: build
        name: Build
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')-${{ matrix.arch }}"
          echo "::set-output name=tag::$IMAGE_TAG"
          nix-build \
            -E 'with import ./. {}; docker.${{ matrix.arch }}' \
            --argstr name "$IMAGE_NAME" \
            --argstr tag "$IMAGE_TAG" \
            --out-link "docker-image-${IMAGE_TAG}-${{ matrix.arch }}.tar.gz"
      - name: Upload image tarball
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: docker-image-*.tar.gz
  docker-manifest:
    name: Push Multi-Arch Manifest List
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Log into GitHub Container Registry
        run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u zombiezen --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download image tarballs
        uses: actions/download-artifact@v3
        with:
          name: docker-images
      - name: Load images into Docker daemon
        run: |
          for name in docker-image-*.tar.gz; do
            docker load < "$name"
          done
      - id: manifest
        name: Create manifest
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')"
          echo "::set-output name=tag::$IMAGE_TAG"
          docker manifest create \
            "${IMAGE_NAME}:${IMAGE_TAG}" \
            "${IMAGE_NAME}:${IMAGE_TAG}-amd64" \
            "${IMAGE_NAME}:${IMAGE_TAG}-arm64"
      - name: Push to GitHub Container Registry
        run: docker manifest push "${IMAGE_NAME}:${IMAGE_TAG}"
        env:
          IMAGE_TAG: ${{ steps.manifest.outputs.tag }}

permissions:
  contents: read
  packages: write
